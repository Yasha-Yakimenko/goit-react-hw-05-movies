{"version":3,"file":"static/js/913.444b8e5c.chunk.js","mappings":"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","sources":["API/fetchMovies.js","webpack://react-homework-template/./src/components/MovieList/MovieListItem/MovieListItem.module.css?166d","components/MovieList/MovieListItem/MovieListItem.jsx","components/MovieList/MovieList.jsx","components/Pages/HomePage.jsx","webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '11fab2ef7976d431da0b2ac329178c30';\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=true`\n  );\n  return response.data.results;\n};\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/all/week?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"MovieListItem_link__1-1ln\",\"item\":\"MovieListItem_item__ZQ-IP\",\"image\":\"MovieListItem_image__UiA6J\",\"wrapper\":\"MovieListItem_wrapper__WjIlz\",\"title\":\"MovieListItem_title__XJUiR\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport styles from './MovieListItem.module.css';\n\nexport const MovieListItem = ({ movie }) => {\n  const { poster_path, name, title, id } = movie;\n  const location = useLocation();\n\n  return (\n    <Link\n      to={`/movies/${id}`}\n      className={styles.link}\n      state={{\n        from: location.pathname + location.search,\n      }}\n    >\n      <div className={styles.item}>\n        <li>\n          <img\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n                : 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/300px-No_image_available.svg.png'\n            }\n            alt={title}\n            className={styles.image}\n          />\n        </li>\n        <div className={styles.wrapper}>\n          <p className={styles.title}>{title ?? name}</p>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nMovieListItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    poster_path: PropTypes.string,\n    name: PropTypes.string,\n    title: PropTypes.string,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport { MovieListItem } from 'components/MovieList/MovieListItem/MovieListItem';\n\nimport styles from './MovieList.module.css';\n\nexport const MovieList = ({ movies }) => {\n  return (\n    <div className={styles.list_section}>\n      <ul className={styles.list}>\n        {movies.map(movie => (\n          <MovieListItem key={movie.id} movie={movie} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\n\nimport { getTrending } from 'API/fetchMovies';\nimport { Loader } from 'components/Loader';\nimport { MovieList } from 'components/MovieList/MovieList';\n\nimport styles from 'components/MovieList/MovieList.module.css';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState(null);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    getTrending()\n      .then(results => setMovies([...results]))\n      .catch(error => setError(error.message));\n  }, []);\n\n  return (\n    <>\n      <h2 className={styles.trending}>Trending Movies</h2>\n      {!movies && <Loader />}\n      {movies && <MovieList movies={movies} />}\n      {error && <p>Something went wrong, please try again later!</p>}\n    </>\n  );\n};\n\nexport default HomePage;\n","// extracted by mini-css-extract-plugin\nexport default {\"list_section\":\"MovieList_list_section__jEBX9\",\"list\":\"MovieList_list__yjDCC\",\"trending\":\"MovieList_trending__BADcN\"};","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["axios","API_KEY","searchMovies","query","response","data","results","getTrending","getDetails","movieId","getCast","cast","getReviews","MovieListItem","movie","poster_path","name","title","id","location","useLocation","to","className","styles","state","from","pathname","search","src","alt","MovieList","movies","map","useState","setMovies","error","setError","useEffect","then","catch","message","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","TypeError"],"sourceRoot":""}