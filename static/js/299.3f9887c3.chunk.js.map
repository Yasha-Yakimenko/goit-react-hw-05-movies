{"version":3,"file":"static/js/299.3f9887c3.chunk.js","mappings":"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","sources":["API/fetchMovies.js","webpack://react-homework-template/./src/components/MovieList/MovieListItem/MovieListItem.module.css?166d","components/MovieList/MovieListItem/MovieListItem.jsx","components/MovieList/MovieList.jsx","components/Pages/MoviePage.jsx","webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '11fab2ef7976d431da0b2ac329178c30';\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=true`\n  );\n  return response.data.results;\n};\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/all/week?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"MovieListItem_link__1-1ln\",\"item\":\"MovieListItem_item__ZQ-IP\",\"image\":\"MovieListItem_image__UiA6J\",\"wrapper\":\"MovieListItem_wrapper__WjIlz\",\"title\":\"MovieListItem_title__XJUiR\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport styles from './MovieListItem.module.css';\n\nexport const MovieListItem = ({ movie }) => {\n  const { poster_path, name, title, id } = movie;\n  const location = useLocation();\n\n  return (\n    <Link\n      to={`/movies/${id}`}\n      className={styles.link}\n      state={{\n        from: location.pathname + location.search,\n      }}\n    >\n      <div className={styles.item}>\n        <li>\n          <img\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n                : 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/300px-No_image_available.svg.png'\n            }\n            alt={title}\n            className={styles.image}\n          />\n        </li>\n        <div className={styles.wrapper}>\n          <p className={styles.title}>{title ?? name}</p>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nMovieListItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    poster_path: PropTypes.string,\n    name: PropTypes.string,\n    title: PropTypes.string,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport { MovieListItem } from 'components/MovieList/MovieListItem/MovieListItem';\n\nimport styles from './MovieList.module.css';\n\nexport const MovieList = ({ movies }) => {\n  return (\n    <div className={styles.list_section}>\n      <ul className={styles.list}>\n        {movies.map(movie => (\n          <MovieListItem key={movie.id} movie={movie} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { FcSearch } from 'react-icons/fc';\nimport Notiflix from 'notiflix';\n\nimport { searchMovies } from 'API/fetchMovies';\nimport { Loader } from 'components/Loader';\nimport { MovieList } from 'components/MovieList/MovieList';\n\nimport styles from 'components/Header/Header.module.css';\n\nconst MoviePage = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState(null);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleChange = element => {\n    setSearchQuery(element.currentTarget.value);\n  };\n  const onFormSubmit = element => {\n    element.preventDefault();\n\n    const newQuery = element.target.elements.query.value.toLowerCase();\n    if (newQuery.trim() === '') {\n      Notiflix.Notify.failure(\"Please, enter correct movie's name\");\n      return;\n    }\n    setSearchParams({ query: newQuery });\n  };\n\n  useEffect(() => {\n    if (searchParams.get('query') !== null) {\n      const newQuery = searchParams.get('query');\n      setLoading(true);\n      searchMovies(newQuery)\n        .then(results => {\n          results.length !== 0\n            ? setMovies([...results])\n            : Notiflix.Notify.failure(\n                \"Sorry, we didn't find any movies matching your search. Please, try again\"\n              );\n        })\n        .catch(error => setError(error.message))\n        .finally(() => setLoading(false));\n      setSearchQuery(searchParams.get('query'));\n    }\n  }, [searchParams]);\n\n  return (\n    <>\n      <form className={styles.form} onSubmit={onFormSubmit}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          value={searchQuery}\n          onChange={handleChange}\n          className={styles.input}\n          autoFocus={true}\n        />\n        <button type=\"submit\" className={styles.button}>\n          <FcSearch className={styles.icon} />\n        </button>\n      </form>\n      {loading && <Loader />}\n      {movies && <MovieList movies={movies} />}\n      {error && <p>Something went wrong, please try again later!</p>}\n    </>\n  );\n};\n\nexport default MoviePage;\n","// extracted by mini-css-extract-plugin\nexport default {\"list_section\":\"MovieList_list_section__jEBX9\",\"list\":\"MovieList_list__yjDCC\",\"trending\":\"MovieList_trending__BADcN\"};"],"names":["axios","API_KEY","searchMovies","query","response","data","results","getTrending","getDetails","movieId","getCast","cast","getReviews","MovieListItem","movie","poster_path","name","title","id","location","useLocation","to","className","styles","state","from","pathname","search","src","alt","MovieList","movies","map","useState","searchQuery","setSearchQuery","setMovies","error","setError","loading","setLoading","useSearchParams","searchParams","setSearchParams","useEffect","get","newQuery","then","length","Notiflix","catch","message","finally","onSubmit","element","preventDefault","target","elements","value","toLowerCase","trim","type","onChange","currentTarget","autoFocus"],"sourceRoot":""}